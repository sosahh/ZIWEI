<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jyss.ziwei.mapper.WebLoginMapper" >
  <resultMap id="BaseResultMap" type="com.jyss.ziwei.entity.MobileLogin" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="u_id" property="uId" jdbcType="BIGINT" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="last_access_time" property="lastAccessTime" jdbcType="BIGINT" />
    <result column="push_info" property="pushInfo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>

  <insert id="insert" parameterType="com.jyss.ziwei.entity.MobileLogin" useGeneratedKeys="true" keyProperty="id">
    insert into u_web_login (id, u_id, token, created_at, last_access_time, push_info,status)
    values (#{id,jdbcType=BIGINT}, #{uId,jdbcType=BIGINT}, #{token,jdbcType=VARCHAR},
      #{createdAt,jdbcType=TIMESTAMP}, #{lastAccessTime,jdbcType=BIGINT}, #{pushInfo,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT})
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="com.jyss.ziwei.entity.MobileLogin" >
    update u_web_login
    <set >
      <if test="uId != null" >
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastAccessTime != null" >
        last_access_time = #{lastAccessTime,jdbcType=BIGINT},
      </if>
      <if test="pushInfo != null" >
        push_info = #{pushInfo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


  <!-- 根据token查询用户 -->
  <select id="findUserByToken" parameterType="string" resultMap="BaseResultMap">
    select * from u_web_login where u_id in (
      select u_id from u_web_login
      <where>
        <if test="token != null and token != ''">and token = #{token}</if>
      </where> )
    order by created_at desc
    limit 1
  </select>



</mapper>